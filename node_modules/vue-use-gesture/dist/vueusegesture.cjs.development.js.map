{"version":3,"file":"vueusegesture.cjs.development.js","sources":["../src/utils/math.ts","../src/utils/rubberband.ts","../src/utils/utils.ts","../src/utils/resolveOptionsWith.ts","../src/utils/config.ts","../src/hooks/buildConfig.ts","../src/utils/state.ts","../src/recognizers/Recognizer.ts","../src/Controller.ts","../src/hooks/useRecognizers.ts","../src/recognizers/CoordinatesRecognizer.ts","../src/utils/event.ts","../src/recognizers/DragRecognizer.ts","../src/utils/memoize-one.ts","../src/utils/react-fast-compare.ts","../src/hooks/useDrag.ts","../src/recognizers/DistanceAngleRecognizer.ts","../src/recognizers/PinchRecognizer.ts","../src/hooks/usePinch.ts","../src/recognizers/WheelRecognizer.ts","../src/hooks/useWheel.ts","../src/recognizers/MoveRecognizer.ts","../src/hooks/useMove.ts","../src/hooks/useHover.ts","../src/recognizers/ScrollRecognizer.ts","../src/hooks/useScroll.ts","../src/hooks/useGesture.ts","../src/useSpring/presets.ts","../src/useSpring/utils.ts","../src/useSpring/motion.ts"],"sourcesContent":["// vector add\nexport function addV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v + v2[i]) as T\n}\n\n// vector substract\nexport function subV<T extends number[]>(v1: T, v2: T): T {\n  return v1.map((v, i) => v - v2[i]) as T\n}\n\n/**\n * Calculates distance\n * @param movement the difference between current and initial vectors\n * @returns distance\n */\nexport function calculateDistance(movement: number[]): number {\n  return Math.hypot(...movement)\n}\n\ninterface Kinematics {\n  velocities: number[]\n  velocity: number\n  distance: number\n  direction: number[]\n}\n\nexport function calculateAllGeometry<T extends number[]>(movement: T, delta: T = movement) {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n\n  const direction = delta.map((v) => alpha * v) as T\n  const distance = calculateDistance(movement)\n\n  return { distance, direction }\n}\n\n/**\n * Calculates all kinematics\n * @template T the expected vector type\n * @param movement the difference between current and initial vectors\n * @param delta the difference between current and previous vectors\n * @param delta_t the time difference between current and previous timestamps\n * @returns all kinematics\n */\nexport function calculateAllKinematics<T extends number[]>(movement: T, delta: T, dt: number): Kinematics {\n  const dl = calculateDistance(delta)\n\n  const alpha = dl === 0 ? 0 : 1 / dl\n  const beta = dt === 0 ? 0 : 1 / dt\n\n  const velocity = beta * dl\n  const velocities = delta.map((v) => beta * v)\n  const direction = delta.map((v) => alpha * v)\n  const distance = calculateDistance(movement)\n\n  return { velocities, velocity, distance, direction }\n}\n\n/**\n * Because IE doesn't support `Math.sign` function, so we use the polyfill version of the function.\n * This polyfill function is suggested by Mozilla:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Polyfill\n * @param x target number\n */\nexport function sign(x: number) {\n  if (Math.sign) return Math.sign(x)\n  return Number(x > 0) - Number(x < 0) || +x\n}\n","function minMax(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(value, max))\n}\n\n// Based on @aholachek ;)\n// https://twitter.com/chpwn/status/285540192096497664\n// iOS constant = 0.55\n\n// https://medium.com/@nathangitter/building-fluid-interfaces-ios-swift-9732bb934bf5\nfunction rubberband2(distance: number, constant: number) {\n  // default constant from the article is 0.7\n  return Math.pow(distance, constant * 5)\n}\n\nfunction rubberband(distance: number, dimension: number, constant: number) {\n  if (dimension === 0 || Math.abs(dimension) === Infinity) return rubberband2(distance, constant)\n  return (distance * dimension * constant) / (dimension + constant * distance)\n}\n\nexport function rubberbandIfOutOfBounds(position: number, min: number, max: number, constant = 0.15) {\n  if (constant === 0) return minMax(position, min, max)\n  if (position < min) return -rubberband(min - position, max - min, constant) + min\n  if (position > max) return +rubberband(position - max, max - min, constant) + max\n  return position\n}\n","export function noop() {}\n\n/**\n * TODO Beware that only optimized cases are covered in tests =)\n * TODO Need to cover general case as well\n *\n * @param fns\n */\nexport function chainFns(...fns: Function[]): Function {\n  if (fns.length === 0) return noop\n  if (fns.length === 1) return fns[0]\n\n  return function (this: any) {\n    var result\n    for (let fn of fns) {\n      result = fn.apply(this, arguments) || result\n    }\n    return result\n  }\n}\n\n/**\n * Expects a simple value or 2D vector (an array with 2 elements) and\n * always returns 2D vector. If simple value is passed, returns a\n * vector with this value as both coordinates.\n *\n * @param value\n */\nexport function ensureVector<T>(value: T | [T, T] | undefined, fallback?: T | [T, T]): [T, T] {\n  if (value === undefined) {\n    if (fallback === undefined) {\n      throw new Error('Must define fallback value if undefined is expected')\n    }\n    value = fallback\n  }\n\n  if (Array.isArray(value)) return value\n  return [value, value]\n}\n\n/**\n * Helper for defining a default value\n *\n * @param value\n * @param fallback\n */\nexport function assignDefault<T extends Object>(value: Partial<T> | undefined, fallback: T): T {\n  return Object.assign({}, fallback, value || {})\n}\n\n/**\n * Resolves getters (functions) by calling them\n * If simple value is given it just passes through\n *\n * @param v\n */\nexport function valueFn<T>(v: T | ((...args: any[]) => T), ...args: any[]): T {\n  if (typeof v === 'function') {\n    // @ts-ignore\n    return v(...args)\n  } else {\n    return v\n  }\n}\n","export type Resolver = (x: any, key: string, obj: object) => any\nexport type ResolverMap = { [k: string]: Resolver | ResolverMap | boolean }\n\nexport function resolveWith<T extends { [k: string]: any }, V extends { [k: string]: any }>(\n  config: Partial<T> = {},\n  resolvers: ResolverMap\n): V {\n  const result: any = {}\n\n  for (const [key, resolver] of Object.entries(resolvers))\n    switch (typeof resolver) {\n      case 'function':\n        result[key] = resolver.call(result, config[key], key, config)\n        break\n      case 'object':\n        result[key] = resolveWith(config[key], resolver)\n        break\n      case 'boolean':\n        if (resolver) result[key] = config[key]\n        break\n    }\n\n  return result\n}\n","import { ensureVector, assignDefault, valueFn } from './utils'\nimport { resolveWith } from './resolveOptionsWith'\n\nimport {\n  GenericOptions,\n  InternalGenericOptions,\n  DragConfig,\n  GestureOptions,\n  InternalDragOptions,\n  InternalGestureOptions,\n  CoordinatesConfig,\n  InternalCoordinatesOptions,\n  DistanceAngleConfig,\n  InternalDistanceAngleOptions,\n  Vector2,\n  Bounds,\n  StateKey,\n  State,\n  CoordinatesKey,\n  DistanceAngleKey,\n} from '../types'\n\nexport const DEFAULT_DRAG_DELAY = 180\nexport const DEFAULT_RUBBERBAND = 0.15\nexport const DEFAULT_SWIPE_VELOCITY = 0.5\nexport const DEFAULT_SWIPE_DISTANCE = 60\n\nconst InternalGestureOptionsNormalizers = {\n  threshold(value: number | Vector2 = 0) {\n    return ensureVector(value)\n  },\n\n  rubberband(value: number | boolean | Vector2 = 0): Vector2 {\n    switch (value) {\n      case true:\n        return ensureVector(DEFAULT_RUBBERBAND)\n      case false:\n        return ensureVector(0)\n      default:\n        return ensureVector(value)\n    }\n  },\n\n  enabled(value = true) {\n    return value\n  },\n\n  triggerAllEvents(value = false) {\n    return value\n  },\n\n  initial(value = 0) {\n    if (typeof value === 'function') return value\n    return ensureVector(value)\n  },\n}\n\nconst InternalCoordinatesOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n  axis: true,\n  lockDirection(value = false) {\n    return value\n  },\n  bounds(value: Bounds | ((state?: State) => Bounds) = {}) {\n    if (typeof value === 'function')\n      return (state?: State) => InternalCoordinatesOptionsNormalizers.bounds(value(state))\n\n    const { left = -Infinity, right = Infinity, top = -Infinity, bottom = Infinity } = value\n\n    return [\n      [left, right],\n      [top, bottom],\n    ]\n  },\n}\n\nconst isBrowser = typeof window !== 'undefined' && window.document && window.document.createElement\n\nconst InternalGenericOptionsNormalizers = {\n  enabled(value = true) {\n    return value\n  },\n  domTarget: true,\n  window(value = isBrowser ? window : undefined) {\n    return value\n  },\n  eventOptions({ passive = true, capture = false } = {}) {\n    return { passive, capture }\n  },\n}\n\nconst InternalDistanceAngleOptionsNormalizers = {\n  ...InternalGestureOptionsNormalizers,\n\n  bounds(_value: undefined, _key: string, { distanceBounds = {}, angleBounds = {} }: any) {\n    const _distanceBounds = (state?: State) => {\n      const D = assignDefault(valueFn(distanceBounds, state), { min: -Infinity, max: Infinity })\n      return [D.min, D.max]\n    }\n\n    const _angleBounds = (state?: State) => {\n      const A = assignDefault(valueFn(angleBounds, state), { min: -Infinity, max: Infinity })\n      return [A.min, A.max]\n    }\n\n    if (typeof distanceBounds !== 'function' && typeof angleBounds !== 'function')\n      return [_distanceBounds(), _angleBounds()]\n\n    return (state?: State) => [_distanceBounds(state), _angleBounds(state)]\n  },\n}\n\nconst InternalDragOptionsNormalizers = {\n  ...InternalCoordinatesOptionsNormalizers,\n\n  threshold(\n    this: any,\n    v: number | Vector2 | undefined,\n    _k: string,\n    { filterTaps = false, lockDirection = false, axis = undefined }: any\n  ) {\n    const A = ensureVector(v, filterTaps ? 3 : lockDirection ? 1 : axis ? 1 : 0) as Vector2\n    this.filterTaps = filterTaps || A[0] + A[1] > 0\n    return A\n  },\n\n  swipeVelocity(v: number | Vector2 = DEFAULT_SWIPE_VELOCITY) {\n    return ensureVector(v)\n  },\n  swipeDistance(v: number | Vector2 = DEFAULT_SWIPE_DISTANCE) {\n    return ensureVector(v)\n  },\n\n  delay(value: number | boolean = 0) {\n    switch (value) {\n      case true:\n        return DEFAULT_DRAG_DELAY\n      case false:\n        return 0\n      default:\n        return value\n    }\n  },\n}\n\nexport function getInternalGenericOptions(config: GenericOptions = {}): InternalGenericOptions {\n  // TODO warn when passive is set to true and domTarget is undefined\n  return resolveWith<GenericOptions, InternalGenericOptions>(config, InternalGenericOptionsNormalizers)\n}\n\nexport function getInternalGestureOptions<T extends StateKey>(\n  config: GestureOptions<T> = {}\n): InternalGestureOptions<T> {\n  return resolveWith<GestureOptions<T>, InternalGestureOptions<T>>(config, InternalGestureOptionsNormalizers)\n}\n\nexport function getInternalCoordinatesOptions<T extends CoordinatesKey>(\n  config: CoordinatesConfig<T> = {}\n): InternalCoordinatesOptions<T> {\n  return resolveWith<CoordinatesConfig<T>, InternalCoordinatesOptions<T>>(config, InternalCoordinatesOptionsNormalizers)\n}\n\nexport function getInternalDistanceAngleOptions<T extends DistanceAngleKey>(\n  config: DistanceAngleConfig<T> = {}\n): InternalDistanceAngleOptions<T> {\n  return resolveWith<DistanceAngleConfig<T>, InternalDistanceAngleOptions<T>>(\n    config,\n    InternalDistanceAngleOptionsNormalizers\n  )\n}\n\nexport function getInternalDragOptions(config: DragConfig = {}): InternalDragOptions {\n  return resolveWith<DragConfig, InternalDragOptions>(config, InternalDragOptionsNormalizers)\n}\n","import {\n  InternalConfig,\n  UseMoveConfig,\n  UseHoverConfig,\n  UseDragConfig,\n  UsePinchConfig,\n  UseScrollConfig,\n  UseWheelConfig,\n} from '../types'\n\nimport {\n  getInternalGenericOptions,\n  getInternalCoordinatesOptions,\n  getInternalDragOptions,\n  getInternalDistanceAngleOptions,\n} from '../utils/config'\n\nimport { UseGestureConfig } from '../types'\n\nexport function _buildMoveConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseMoveConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.move = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildHoverConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseHoverConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.hover = { enabled: true, ...rest }\n  return opts\n}\n\nexport function _buildDragConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseDragConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.drag = getInternalDragOptions(rest)\n  return opts\n}\n\nexport function _buildPinchConfig({ domTarget, eventOptions, window, enabled, ...rest }: UsePinchConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.pinch = getInternalDistanceAngleOptions(rest)\n  return opts\n}\n\nexport function _buildScrollConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseScrollConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.scroll = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function _buildWheelConfig({ domTarget, eventOptions, window, enabled, ...rest }: UseWheelConfig) {\n  const opts: InternalConfig = getInternalGenericOptions({ domTarget, eventOptions, window, enabled })\n  opts.wheel = getInternalCoordinatesOptions(rest)\n  return opts\n}\n\nexport function buildComplexConfig(config: UseGestureConfig = {}, actions: Set<string> = new Set()) {\n  const { drag, wheel, move, scroll, pinch, hover, eventOptions, window, domTarget, enabled } = config\n\n  const mergedConfig: InternalConfig = getInternalGenericOptions({ eventOptions, window, domTarget, enabled })\n\n  if (actions.has('onDrag')) mergedConfig.drag = getInternalDragOptions(drag)\n  if (actions.has('onWheel')) mergedConfig.wheel = getInternalCoordinatesOptions(wheel)\n  if (actions.has('onScroll')) mergedConfig.scroll = getInternalCoordinatesOptions(scroll)\n  if (actions.has('onMove')) mergedConfig.move = getInternalCoordinatesOptions(move)\n  if (actions.has('onPinch')) mergedConfig.pinch = getInternalDistanceAngleOptions(pinch)\n  if (actions.has('onHover')) mergedConfig.hover = { enabled: true, ...hover }\n\n  return mergedConfig\n}\n","import { noop } from './utils'\nimport { CommonGestureState, Coordinates, State, DistanceAngle, Vector2, DragState } from '../types'\n\nfunction getInitial<T>(mixed: T): T & CommonGestureState {\n  return {\n    _active: false,\n    _blocked: false,\n    _intentional: [false, false],\n    _movement: [0, 0],\n    _initial: [0, 0],\n    _bounds: [\n      [-Infinity, Infinity],\n      [-Infinity, Infinity],\n    ],\n    _lastEventType: undefined,\n    event: undefined,\n    // currentTarget: undefined,\n    // pointerId: undefined,\n    intentional: false,\n    values: [0, 0],\n    velocities: [0, 0],\n    delta: [0, 0],\n    movement: [0, 0],\n    offset: [0, 0],\n    lastOffset: [0, 0],\n    direction: [0, 0],\n    initial: [0, 0],\n    previous: [0, 0],\n    first: false,\n    last: false,\n    active: false,\n    timeStamp: 0,\n    startTime: 0,\n    elapsedTime: 0,\n    cancel: noop,\n    canceled: false,\n    memo: undefined,\n    args: undefined,\n    ...mixed,\n  }\n}\n\nexport function getInitialState(): State {\n  const shared = {\n    hovering: false,\n    scrolling: false,\n    wheeling: false,\n    dragging: false,\n    moving: false,\n    pinching: false,\n    touches: 0,\n    buttons: 0,\n    down: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    ctrlKey: false,\n  }\n\n  const drag = getInitial<DragState & Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n    _isTap: true,\n    _delayedEvent: false,\n    _pointerId: undefined,\n    tap: false,\n    swipe: [0, 0],\n  })\n\n  const pinch = getInitial<DistanceAngle>({\n    da: [0, 0] as Vector2,\n    vdva: [0, 0] as Vector2,\n    // @ts-ignore origin can never be passed as undefined in userland\n    origin: undefined,\n    turns: 0,\n  })\n\n  const wheel = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const move = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  const scroll = getInitial<Coordinates>({\n    axis: undefined,\n    xy: [0, 0] as Vector2,\n    vxvy: [0, 0] as Vector2,\n    velocity: 0,\n    distance: 0,\n  })\n\n  return { shared, drag, pinch, wheel, move, scroll }\n}\n","import Controller from '../Controller'\nimport {\n  StateKey,\n  SharedGestureState,\n  IngKey,\n  InternalConfig,\n  GestureKey,\n  GestureState,\n  EventTypes,\n  PartialGestureState,\n  Vector2,\n  FullGestureState,\n  RecognizerClass,\n} from '../types'\nimport { getInitialState } from '../utils/state'\nimport { rubberbandIfOutOfBounds } from '../utils/rubberband'\nimport { subV, addV, sign } from '../utils/math'\nimport { valueFn } from '../utils/utils'\n\nexport const RecognizersMap = new Map<GestureKey, RecognizerClass>()\n\n/**\n * @private\n * Recognizer abstract class.\n */\nexport default abstract class Recognizer<T extends StateKey = StateKey> {\n  abstract readonly ingKey: IngKey // dragging, scrolling, etc.\n  protected debounced: Boolean = true\n  abstract readonly stateKey: T\n\n  /**\n   * Creates an instance of a gesture recognizer.\n   * @param stateKey drag, move, pinch, etc.\n   * @param controller the controller attached to the gesture\n   * @param [args] the args that should be passed to the gesture handler\n   */\n  constructor(readonly controller: Controller, readonly args: any[] = []) {}\n\n  // Returns the gesture config\n  get config(): NonNullable<InternalConfig[T]> {\n    return this.controller.config[this.stateKey]!\n  }\n\n  // Is the gesture enabled\n  get enabled(): boolean {\n    return this.controller.config.enabled && this.config.enabled\n  }\n\n  // Returns the controller state for a given gesture\n  get state(): GestureState<T> {\n    return this.controller.state[this.stateKey]\n  }\n\n  // Returns the gesture handler\n  get handler() {\n    return this.controller.handlers[this.stateKey]!\n  }\n\n  // Convenience method to update the shared state\n  protected updateSharedState(sharedState: Partial<SharedGestureState> | null) {\n    Object.assign(this.controller.state.shared, sharedState)\n  }\n\n  // Convenience method to update the gesture state\n  protected updateGestureState(gestureState: PartialGestureState<T> | null) {\n    Object.assign(this.state, gestureState)\n  }\n\n  // Convenience method to set a timeout for a given gesture\n  protected setTimeout = (callback: (...args: any[]) => void, ms: number = 140, ...args: any[]): void => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n    this.controller.timeouts[this.stateKey] = window.setTimeout(callback, ms, ...args)\n  }\n\n  // Convenience method to clear a timeout for a given gesture\n  protected clearTimeout = () => {\n    clearTimeout(this.controller.timeouts[this.stateKey])\n  }\n\n  protected abstract getKinematics(values: Vector2, event: UIEvent): PartialGestureState<T>\n  protected abstract getInternalMovement(values: Vector2, state: GestureState<T>): Vector2\n  protected abstract mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'>\n\n  public abstract addBindings(bindings: any): void\n\n  /**\n   * Returns state properties depending on the movement and state.\n   *\n   * Should be overriden for custom behavior, doesn't do anything in the implementation\n   * below.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    return { _intentional, _blocked: false } as PartialGestureState<T>\n  }\n\n  /**\n   * Returns basic movement properties for the gesture based on the next values and current state.\n   */\n  protected getMovement(values: Vector2): PartialGestureState<T> {\n    const { initial, bounds, rubberband, threshold: T } = this.config\n\n    const { _bounds, _initial, _active, _intentional: wasIntentional, lastOffset, movement: prevMovement } = this.state\n    const M = this.getInternalMovement(values, this.state)\n\n    const i0 = wasIntentional[0] === false ? getIntentionalDisplacement(M[0], T[0]) : wasIntentional[0]\n    const i1 = wasIntentional[1] === false ? getIntentionalDisplacement(M[1], T[1]) : wasIntentional[1]\n\n    // Get gesture specific state properties based on intentionality and movement.\n    const intentionalityCheck = this.checkIntentionality([i0, i1], M)\n    if (intentionalityCheck._blocked) {\n      return { ...intentionalityCheck, _movement: M, delta: [0, 0] }\n    }\n\n    const _intentional = intentionalityCheck._intentional!\n    const _movement = M\n\n    let __cachedBounds\n    let __cachedInitial\n\n    if (_intentional[0] !== false && wasIntentional[0] === false) {\n      __cachedInitial = valueFn(initial, this.state)\n      __cachedBounds = valueFn(bounds, this.state)\n      _initial[0] = __cachedInitial[0]\n      _bounds[0] = __cachedBounds[0]\n    }\n    if (_intentional[1] !== false && wasIntentional[1] === false) {\n      __cachedInitial = __cachedInitial ?? valueFn(initial, this.state)\n      __cachedBounds = __cachedBounds ?? valueFn(bounds, this.state)\n      _initial[1] = __cachedInitial[1]\n      _bounds[1] = __cachedBounds[1]\n    }\n\n    /**\n     * The movement sent to the handler has 0 in its dimensions when intentionality is false.\n     * It is calculated from the actual movement minus the threshold.\n     */\n    let movement: Vector2 = [\n      _intentional[0] !== false ? M[0] - _intentional[0] : _initial[0],\n      _intentional[1] !== false ? M[1] - _intentional[1] : _initial[1],\n    ]\n\n    const offset = addV(movement, lastOffset)\n\n    /**\n     * Rubberband should be 0 when the gesture is no longer active, so that movement\n     * and offset can return within their bounds.\n     */\n    const _rubberband: Vector2 = _active ? rubberband : [0, 0]\n    movement = computeRubberband(_bounds, addV(movement, _initial), _rubberband)\n\n    return {\n      ...intentionalityCheck,\n      intentional: _intentional[0] !== false || _intentional[1] !== false,\n      _initial,\n      _movement,\n      movement,\n      values,\n      offset: computeRubberband(_bounds, offset, _rubberband),\n      delta: subV(movement, prevMovement),\n    } as PartialGestureState<T>\n  }\n\n  // Cleans the gesture. Can be overriden by gestures.\n  protected clean() {\n    this.clearTimeout()\n  }\n\n  /**\n   * Fires the gesture handler\n   */\n  protected fireGestureHandler = (forceFlag: boolean = false): FullGestureState<T> | null => {\n    /**\n     * If the gesture has been blocked (this can happen when the gesture has started in an unwanted direction),\n     * clean everything and don't do anything.\n     */\n    if (this.state._blocked) {\n      // we need debounced gestures to end by themselves\n      if (!this.debounced) {\n        this.state._active = false\n        this.clean()\n      }\n      return null\n    }\n\n    // If the gesture has no intentional dimension, don't fire the handler.\n    if (!forceFlag && !this.state.intentional && !this.config.triggerAllEvents) return null\n\n    if (this.state.intentional) {\n      const prev_active = this.state.active\n      const next_active = this.state._active\n\n      this.state.active = next_active\n      this.state.first = next_active && !prev_active\n      this.state.last = prev_active && !next_active\n\n      this.controller.state.shared[this.ingKey] = next_active // Sets dragging, pinching, etc. to the gesture active state\n    }\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...this.mapStateValues(this.state), // Sets xy or da to the gesture state values\n    } as FullGestureState<T>\n\n    // @ts-ignore\n    const newMemo = this.handler(state)\n\n    // Sets memo to the returned value of the handler (unless it's not undefined)\n    this.state.memo = newMemo !== void 0 ? newMemo : this.state.memo\n\n    // Cleans the gesture when the gesture is no longer active.\n    if (!this.state._active) this.clean()\n\n    return state\n  }\n}\n\n//--------------------------------------------\n\nfunction getIntentionalDisplacement(movement: number, threshold: number): number | false {\n  if (Math.abs(movement) >= threshold) {\n    return sign(movement) * threshold\n  } else {\n    return false\n  }\n}\n\nfunction computeRubberband(bounds: [Vector2, Vector2], [Vx, Vy]: Vector2, [Rx, Ry]: Vector2): Vector2 {\n  const [[X1, X2], [Y1, Y2]] = bounds\n\n  return [rubberbandIfOutOfBounds(Vx, X1, X2, Rx), rubberbandIfOutOfBounds(Vy, Y1, Y2, Ry)]\n}\n\n/**\n * Returns a generic, common payload for all gestures from an event.\n */\nexport function getGenericPayload<T extends StateKey>(\n  { state, args }: Recognizer<T>,\n  event: EventTypes[T],\n  isStartEvent?: boolean\n) {\n  const { timeStamp, type: _lastEventType } = event\n  const previous = state.values\n  const elapsedTime = isStartEvent ? 0 : timeStamp - state.startTime!\n  return { _lastEventType, event, timeStamp, elapsedTime, args, previous }\n}\n\n/**\n * Returns the reinitialized start state for the gesture.\n * Should be common to all gestures.\n */\nexport function getStartGestureState<T extends StateKey>(\n  recognizer: Recognizer<T>,\n  values: Vector2,\n  event: EventTypes[T]\n) {\n  const offset = recognizer.state.offset\n  const startTime = event.timeStamp\n\n  return {\n    ...getInitialState()[recognizer.stateKey],\n    _active: true,\n    values,\n    initial: values,\n    offset,\n    lastOffset: offset,\n    startTime,\n  }\n}\n","import {\n  StateKey,\n  State,\n  Fn,\n  ReactEventHandlerKey,\n  ReactEventHandlers,\n  InternalConfig,\n  InternalHandlers,\n  RecognizerClass,\n} from './types'\nimport { getInitialState } from './utils/state'\nimport { chainFns } from './utils/utils'\n\nfunction partial(func: Fn, state: any) {\n  return function (event: any, ...args: any) {\n    // @ts-ignore\n    return func.call(this, { ...state, event }, ...args)\n  }\n}\n\n/**\n * The controller will keep track of the state for all gestures and also keep\n * track of timeouts, and window listeners.\n */\nexport default class Controller {\n  public nativeRefs!: any\n  public config!: InternalConfig\n  public handlers!: InternalHandlers\n  public state: State // state for all gestures\n  public timeouts: { [stateKey in StateKey]?: number } // tracks timeouts of debounced gestures\n  public domListeners: [string, Fn][] // when config.domTarget is set, we attach events directly to the dom\n  public windowListeners: { [stateKey in StateKey]?: [string, Function][] } // keeps track of window listeners added by gestures (drag only at the moment)\n\n  constructor(private classes: Set<RecognizerClass>) {\n    this.state = getInitialState()\n    this.timeouts = {}\n    this.domListeners = []\n    this.windowListeners = {}\n  }\n\n  public bind = (...args: any[]) => {\n    const bindings: { [key: string]: Function[] } = {}\n\n    for (let RecognizerClass of this.classes) new RecognizerClass(this, args).addBindings(bindings)\n\n    // we also add event bindings for native handlers\n    for (let [event, handler] of Object.entries(this.nativeRefs))\n      addBindings(bindings, event, partial(handler, { ...this.state.shared, args }))\n\n    if (this.config.domTarget) {\n      // If config.domTarget is set we add event listeners to it and return the clean function.\n      return updateDomListeners(this, bindings)\n    } else {\n      // If not, we return an object that contains gesture handlers mapped to react handler event keys.\n      return getPropsListener(this, bindings)\n    }\n  }\n\n  public effect = () => {\n    if (this.config.domTarget) this.bind()\n    return this.clean\n  }\n\n  /**\n   * Function ran on component unmount: cleans timeouts and removes dom listeners set by the bind function.\n   */\n  public clean = (): void => {\n    const domTarget = getDomTargetFromConfig(this.config)\n    const { eventOptions } = this.config\n    if (domTarget) removeListeners(domTarget, takeAll(this.domListeners), eventOptions)\n    Object.values(this.timeouts).forEach(clearTimeout)\n    clearAllWindowListeners(this)\n  }\n}\n\nexport function clearAllWindowListeners(controller: Controller) {\n  const {\n    config: { window: el, eventOptions },\n    windowListeners,\n  } = controller\n  if (!el) return\n\n  for (let stateKey in windowListeners) {\n    const handlers = windowListeners[stateKey as StateKey]\n    removeListeners(el, handlers, eventOptions)\n  }\n\n  controller.windowListeners = {}\n}\n\nexport function clearWindowListeners({ config, windowListeners }: Controller, stateKey: StateKey) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], config.eventOptions)\n  delete windowListeners[stateKey]\n}\n\nexport function updateWindowListeners(\n  { config, windowListeners }: Controller,\n  stateKey: StateKey,\n  listeners: [string, Fn][] = []\n) {\n  if (!config.window) return\n  removeListeners(config.window, windowListeners[stateKey], config.eventOptions)\n  addListeners(config.window, (windowListeners[stateKey] = listeners), config.eventOptions)\n}\n\nfunction updateDomListeners({ config, domListeners }: Controller, bindings: { [key: string]: Function[] }) {\n  const domTarget = getDomTargetFromConfig(config)\n  if (!domTarget) throw new Error('domTarget must be defined')\n  const { eventOptions } = config\n\n  removeListeners(domTarget, takeAll(domListeners), eventOptions)\n\n  for (let [key, fns] of Object.entries(bindings)) {\n    const name = key.slice(2).toLowerCase()\n    domListeners.push([name, chainFns(...fns)])\n  }\n\n  addListeners(domTarget, domListeners, eventOptions)\n}\n\nfunction getPropsListener({ config }: Controller, bindings: { [key: string]: Function[] }) {\n  const props: ReactEventHandlers = {}\n  const captureString = config.eventOptions.capture ? 'Capture' : ''\n  for (let [event, fns] of Object.entries(bindings)) {\n    const fnsArray = Array.isArray(fns) ? fns : [fns]\n    const key = (event + captureString) as ReactEventHandlerKey\n    props[key] = chainFns(...(fnsArray as Fn[]))\n  }\n  return props\n}\n\nfunction takeAll<T>(array: Array<T> = []) {\n  return array.splice(0, array.length)\n}\n\nfunction getDomTargetFromConfig({ domTarget }: InternalConfig) {\n  return domTarget && 'value' in domTarget ? domTarget.value : domTarget\n}\n\n/**\n * bindings is an object which keys match ReactEventHandlerKeys.\n * Since a recognizer might want to bind a handler function to an event key already used by a previously\n * added recognizer, we need to make sure that each event key is an array of all the functions mapped for\n * that key.\n */\nexport function addBindings(bindings: any, name: string, fn: Fn): void {\n  if (!bindings[name]) bindings[name] = []\n  bindings[name]!.push(fn)\n}\n\nfunction addListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.addEventListener(eventName, eventHandler, options)\n  }\n}\n\nfunction removeListeners(el: EventTarget, listeners: Array<[string, Fn]> = [], options = {}) {\n  for (let [eventName, eventHandler] of listeners) {\n    el.removeEventListener(eventName, eventHandler, options)\n  }\n}\n","import { onMounted } from 'vue-demi'\n\n// import * as React from '../utils/react';\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport Controller from '../Controller'\nimport {\n  InternalConfig,\n  HookReturnType,\n  InternalHandlers,\n  GenericOptions,\n  RecognizerClass,\n  NativeHandlers,\n} from '../types'\n\n/**\n * Utility hook called by all gesture hooks and that will be responsible for the internals.\n *\n * @param handlers\n * @param classes\n * @param config\n * @param nativeHandlers - native handlers such as onClick, onMouseDown, etc.\n */\nexport default function useRecognizers<Config extends Partial<GenericOptions>>(\n  handlers: Partial<InternalHandlers>,\n  config: InternalConfig,\n  nativeHandlers: Partial<NativeHandlers> = {}\n): (...args: any[]) => HookReturnType<Config> {\n  const classes = resolveClasses(handlers)\n\n  // const controller = React.useMemo(() => new Controller(classes), []);\n  const controller = new Controller(classes)\n  controller!.config = config\n  controller!.handlers = handlers\n  controller!.nativeRefs = nativeHandlers\n\n  // React.useEffect(controller.effect, []);\n  // console.log(controller.effect);//\n  onMounted(controller.effect)\n\n  // @ts-ignore\n  if (controller.config.domTarget) return deprecationNoticeForDomTarget\n  // @ts-ignore\n  return controller.bind\n}\n\nfunction deprecationNoticeForDomTarget() {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn(\n      `Deprecation notice: When the \\`domTarget\\` option is specified, you don't need to write \\`useEffect(bind, [bind])\\` anymore: event binding is now made handled internally to this lib.\\n\\nNext version won't return anything when \\`domTarget\\` is provided, therefore your code will break if you try to call \\`useEffect\\`.`\n    )\n  }\n}\n\nfunction resolveClasses(internalHandlers: Partial<InternalHandlers>) {\n  const classes = new Set<RecognizerClass>()\n\n  if (internalHandlers.drag) classes.add(RecognizersMap.get('drag')!)\n  if (internalHandlers.wheel) classes.add(RecognizersMap.get('wheel')!)\n  if (internalHandlers.scroll) classes.add(RecognizersMap.get('scroll')!)\n  if (internalHandlers.move) classes.add(RecognizersMap.get('move')!)\n  if (internalHandlers.pinch) classes.add(RecognizersMap.get('pinch')!)\n  if (internalHandlers.hover) classes.add(RecognizersMap.get('hover')!)\n\n  return classes\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, GestureState, CoordinatesKey } from '../types'\n\n/**\n * @private\n * Abstract class for coordinates-based gesture recongizers\n */\nexport default abstract class CoordinatesRecognizer<T extends CoordinatesKey> extends Recognizer<T> {\n  /**\n   * Returns the real movement (without taking intentionality into acount)\n   */\n  protected getInternalMovement(values: Vector2, state: GestureState<T>): Vector2 {\n    return subV(values, state.initial)\n  }\n\n  /**\n   * In coordinates-based gesture, this function will detect the first intentional axis,\n   * lock the gesture axis if lockDirection is specified in the config, block the gesture\n   * if the first intentional axis doesn't match the specified axis in config.\n   */\n  protected checkIntentionality(\n    _intentional: [false | number, false | number],\n    _movement: Vector2\n  ): PartialGestureState<T> {\n    if (_intentional[0] === false && _intentional[1] === false) {\n      return { _intentional, axis: this.state.axis } as PartialGestureState<T>\n    }\n    const [absX, absY] = _movement.map(Math.abs)\n    const axis = this.state.axis || (absX > absY ? 'x' : absX < absY ? 'y' : undefined)\n    if (!this.config.axis && !this.config.lockDirection) return { _intentional, _blocked: false, axis } as any\n    if (!axis) return { _intentional: [false, false], _blocked: false, axis } as any\n    if (!!this.config.axis && axis !== this.config.axis) return { _intentional, _blocked: true, axis } as any\n    _intentional![axis === 'x' ? 1 : 0] = false\n    return { _intentional, _blocked: false, axis } as any\n  }\n\n  getKinematics(values: Vector2, event: UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    if (!state._blocked) {\n      const dt = event.timeStamp - this.state.timeStamp!\n      Object.assign(state, calculateAllKinematics(state.movement!, state.delta!, dt))\n    }\n    return state\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { xy: state.values, vxvy: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n","import { Vector2, WebKitGestureEvent, DomEvents } from '../types'\n\nconst WEBKIT_DISTANCE_SCALE_FACTOR = 260\n\n/**\n * Whether the browser supports GestureEvent (ie Safari)\n * @returns true if the browser supports gesture event\n */\nexport function supportsGestureEvents(): boolean {\n  try {\n    // TODO [TS] possibly find GestureEvent definitions?\n    // @ts-ignore: no type definitions for webkit GestureEvents\n    return 'constructor' in GestureEvent\n  } catch (e) {\n    return false\n  }\n}\n\nexport function supportsTouchEvents(): boolean {\n  return typeof window !== 'undefined' && window.ontouchstart === null\n}\n\nfunction getTouchEvents(event: DomEvents) {\n  if ('touches' in event) {\n    const { targetTouches, changedTouches } = event\n    return targetTouches.length > 0 ? targetTouches : changedTouches\n  }\n  return null\n}\n\nexport function getGenericEventData(event: DomEvents) {\n  const buttons = 'buttons' in event ? event.buttons : 0\n  const touchEvents = getTouchEvents(event)\n  const touches = (touchEvents && touchEvents.length) || 0\n  const down = touches > 0 || buttons > 0\n\n  const { shiftKey, altKey, metaKey, ctrlKey } = event as any // TODO check if this might create some overrides?\n  return { touches, down, buttons, shiftKey, altKey, metaKey, ctrlKey }\n}\n\n/**\n * Gets pointer event values.\n * @param event\n * @returns pointer event values\n */\nexport function getPointerEventValues(event: TouchEvent | PointerEvent): Vector2 {\n  const touchEvents = getTouchEvents(event)\n  const { clientX, clientY } = touchEvents ? touchEvents[0] : event\n  return [clientX, clientY]\n}\n\n/**\n * Gets scroll event values\n * @param event\n * @returns scroll event values\n */\nexport function getScrollEventValues(event: UIEvent): Vector2 {\n  // If the currentTarget is the window then we return the scrollX/Y position.\n  // If not (ie the currentTarget is a DOM element), then we return scrollLeft/Top\n  const { scrollX, scrollY, scrollLeft, scrollTop } = event.currentTarget as Element & Window\n  return [scrollX || scrollLeft || 0, scrollY || scrollTop || 0]\n}\n\n/**\n * Gets wheel event values.\n * @param event\n * @returns wheel event values\n */\nexport function getWheelEventValues(event: WheelEvent): Vector2 {\n  const { deltaX, deltaY } = event\n  //TODO implement polyfill ?\n  // https://developer.mozilla.org/en-US/docs/Web/Events/wheel#Polyfill\n  return [deltaX, deltaY]\n}\n\n/**\n * Gets webkit gesture event values.\n * @param event\n * @returns webkit gesture event values\n */\nexport function getWebkitGestureEventValues(event: WebKitGestureEvent): Vector2 {\n  return [event.scale * WEBKIT_DISTANCE_SCALE_FACTOR, event.rotation]\n}\n\n/**\n * Gets two touches event data\n * @param event\n * @returns two touches event data\n */\nexport function getTwoTouchesEventData(event: TouchEvent) {\n  const { targetTouches } = event\n  const A = targetTouches[0],\n    B = targetTouches[1]\n\n  const dx = B.clientX - A.clientX\n  const dy = B.clientY - A.clientY\n  const cx = (B.clientX + A.clientX) / 2\n  const cy = (B.clientY + A.clientY) / 2\n\n  const e: any = 'nativeEvent' in event ? event['nativeEvent'] : event //TODO: why never?\n\n  const distance = Math.hypot(dx, dy)\n  const angle = (e.rotation as number) ?? -(Math.atan2(dx, dy) * 180) / Math.PI\n\n  const values: Vector2 = [distance, angle]\n  const origin: Vector2 = [cx, cy]\n\n  return { values, origin }\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getPointerEventValues, getGenericEventData } from '../utils/event'\nimport { calculateDistance, sign } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings, updateWindowListeners, clearWindowListeners } from '../Controller'\n\nexport const TAP_DISTANCE_THRESHOLD = 3\nexport const SWIPE_MAX_ELAPSED_TIME = 220\n\nexport class DragRecognizer extends CoordinatesRecognizer<'drag'> {\n  readonly ingKey = 'dragging'\n  readonly stateKey = 'drag'\n\n  /**\n   * TODO add back when setPointerCapture is widely wupported\n   * https://caniuse.com/#search=setPointerCapture\n   * private setPointers = (event: UseGestureEvent<PointerEvent>) => {\n   *   const { currentTarget, pointerId } = event\n   *   if (currentTarget) currentTarget.setPointerCapture(pointerId)\n   *   this.updateGestureState({ currentTarget, pointerId })\n   * }\n\n   * private removePointers = () => {\n   *   const { currentTarget, pointerId } = this.state\n   *   if (currentTarget && pointerId) currentTarget.releasePointerCapture(pointerId)\n   * }\n   */\n\n  onDragStart = (event: PointerEvent): void => {\n    if (!this.enabled || this.state._active) return\n\n    /**\n     * TODO add back when setPointerCapture is widely supported\n     * this.setPointers(event as PointerEvent)\n     */\n\n    updateWindowListeners(this.controller, this.stateKey, [\n      ['pointermove', this.onDragChange],\n      ['pointerup', this.onDragEnd],\n      ['pointercancel', this.onDragEnd],\n    ])\n\n    // We set the state pointerId to the event.pointerId so we can make sure\n    // that we lock the drag to the event initiating the gesture\n    this.updateGestureState({ _pointerId: event.pointerId })\n\n    if (this.config.delay > 0) {\n      this.state._delayedEvent = true\n      // If it's a React SyntheticEvent we need to persist it so that we can use it async\n      // if ('persist' in event && typeof event.persist === 'function') event.persist();\n      // this.setTimeout(this.startDrag.bind(this), this.config.delay, event);\n    } else {\n      this.startDrag(event)\n    }\n  }\n\n  startDrag(event: PointerEvent) {\n    const values = getPointerEventValues(event)\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      _pointerId: event.pointerId,\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onDragChange = (event: PointerEvent): void => {\n    // If the gesture was canceled don't respond to the event.\n    if (this.state.canceled) return\n\n    // If the event pointerId doesn't match the initiating pointerId\n    // don't respond to the event.\n    if (event.pointerId !== this.state._pointerId) return\n\n    // If the gesture isn't active then respond to the event only if\n    // it's been delayed via the `delay` option, in which case start\n    // the gesture immediately.\n    if (!this.state._active) {\n      if (this.state._delayedEvent) {\n        this.clearTimeout()\n        this.startDrag(event)\n      }\n      return\n    }\n\n    const genericEventData = getGenericEventData(event)\n\n    // If the event doesn't have any button / touches left we should cancel\n    // the gesture. This may happen if the drag release happens outside the browser\n    // window.\n    if (!genericEventData.down) {\n      this.onDragEnd(event)\n      return\n    }\n\n    this.updateSharedState(genericEventData)\n    const values = getPointerEventValues(event)\n\n    const kinematics = this.getKinematics(values, event)\n    const genericPayload = getGenericPayload(this, event)\n\n    // This verifies if the drag can be assimilated to a tap by checking\n    // if the real distance of the drag (ie not accounting for the threshold) is\n    // greater than the TAP_DISTANCE_THRESHOLD.\n    let { _isTap } = this.state\n    const realDistance = calculateDistance(kinematics._movement!)\n    if (_isTap && realDistance >= TAP_DISTANCE_THRESHOLD) _isTap = false\n\n    this.updateGestureState({ ...genericPayload, ...kinematics, _isTap })\n\n    this.fireGestureHandler()\n  }\n\n  onDragEnd = (event: PointerEvent): void => {\n    // If the event pointerId doesn't match the initiating pointerId\n    // don't respond to the event.\n    if (event.pointerId !== this.state._pointerId) return\n\n    this.state._active = false\n    this.updateSharedState({ down: false, buttons: 0, touches: 0 })\n\n    const tap = this.state._isTap\n    const [vx, vy] = this.state.velocities\n    const [mx, my] = this.state.movement\n    const [ix, iy] = this.state._intentional\n    const [svx, svy] = this.config.swipeVelocity\n    const [sx, sy] = this.config.swipeDistance\n\n    const endState = {\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    }\n\n    const swipe: [number, number] = [0, 0]\n\n    if (endState.elapsedTime < SWIPE_MAX_ELAPSED_TIME) {\n      if (ix !== false && Math.abs(vx) > svx && Math.abs(mx) > sx) swipe[0] = sign(vx)\n      if (iy !== false && Math.abs(vy) > svy && Math.abs(my) > sy) swipe[1] = sign(vy)\n    }\n\n    this.updateGestureState({ ...endState, tap, swipe })\n    this.fireGestureHandler(tap === true)\n  }\n\n  clean = (): void => {\n    super.clean()\n    this.state._delayedEvent = false // can't remember if this is useful?\n    clearWindowListeners(this.controller, this.stateKey)\n    // TODO add back when setPointerCapture is widely wupported\n    // this.removePointers()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.updateGestureState({ canceled: true })\n    this.state._active = false\n    this.updateSharedState({ down: false, buttons: 0, touches: 0 })\n    requestAnimationFrame(() => this.fireGestureHandler())\n  }\n\n  onClick = (event: UIEvent): void => {\n    if (!this.state._isTap) event.stopPropagation()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onPointerDown', this.onDragStart)\n    if (this.config.filterTaps) {\n      const handler = this.controller.config.eventOptions.capture ? 'onClick' : 'onClickCapture'\n      addBindings(bindings, handler, this.onClick)\n    }\n\n    // TODO add back when setPointerCapture is widely wupported\n    // addBindings(bindings, 'onPointerMove', this.onDragChange)\n    // addBindings(bindings, 'onPointerUp', this.onDragEnd)\n    // addBindings(bindings, 'onPointerCancel', this.onDragEnd)\n  }\n}\n","/**\n * Inlined from https://github.com/alexreardon/memoize-one\n */\n\nexport type EqualityFn = (newArgs: any[], lastArgs: any[]) => boolean\n\nexport default function memoizeOne<ResultFn extends (this: any, ...newArgs: any[]) => ReturnType<ResultFn>>(\n  resultFn: ResultFn,\n  isEqual: EqualityFn\n): ResultFn {\n  let lastThis: unknown\n  let lastArgs: unknown[] = []\n  let lastResult: ReturnType<ResultFn>\n  let calledOnce: boolean = false\n\n  function memoized(this: unknown, ...newArgs: unknown[]): ReturnType<ResultFn> {\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult\n    }\n\n    lastResult = resultFn.apply(this, newArgs)\n    calledOnce = true\n    lastThis = this\n    lastArgs = newArgs\n    return lastResult\n  }\n\n  return memoized as ResultFn\n}\n","/**\n * Taken from https://github.com/FormidableLabs/react-fast-compare\n *\n * Dropped comments and ArrayBuffer handling\n */\n\nfunction equal(a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false\n\n    let length, i, keys\n    if (Array.isArray(a)) {\n      length = a.length\n      if (length !== b.length) return false\n      for (i = length; i-- !== 0; ) if (!equal(a[i], b[i])) return false\n      return true\n    }\n\n    let it\n    if (typeof Map === 'function' && a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!equal(i.value[1], b.get(i.value[0]))) return false\n      return true\n    }\n\n    if (typeof Set === 'function' && a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) return false\n      it = a.entries()\n      while (!(i = it.next()).done) if (!b.has(i.value[0])) return false\n      return true\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf()\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString()\n\n    keys = Object.keys(a)\n    length = keys.length\n    if (length !== Object.keys(b).length) return false\n\n    for (i = length; i-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false\n\n    if (typeof Element !== 'undefined' && a instanceof Element) return false\n\n    for (i = length; i-- !== 0; ) {\n      if (keys[i] === '_owner' && a.$$typeof) continue\n      if (!equal(a[keys[i]], b[keys[i]])) return false\n    }\n    return true\n  }\n\n  // true if both NaN, false otherwise — NaN !== NaN → true\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b\n}\n\nexport default function isEqual(a: any, b: any) {\n  try {\n    return equal(a, b)\n  } catch (error) {\n    if ((error.message || '').match(/stack|recursion/i)) {\n      console.warn('react-fast-compare cannot handle circular refs')\n      return false\n    }\n    throw error\n  }\n}\n","import { UseDragConfig, Handler, EventTypes } from '../types'\nimport { _buildDragConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { ref } from 'vue-demi'\n\n/**\n * Drag hook.\n *\n * @param handler - the function fired every time the drag gesture updates\n * @param [config={}] - the config object including generic options and drag options\n */\nexport function useDrag<K = EventTypes['drag']>(handler: Handler<'drag', K>, config: UseDragConfig | {} = {}) {\n  RecognizersMap.set('drag', DragRecognizer)\n  const buildDragConfig = ref<any>()\n  if (!buildDragConfig.value) {\n    buildDragConfig.value = memoize(_buildDragConfig, isEqual)\n  }\n  return useRecognizers<UseDragConfig>({ drag: handler }, buildDragConfig.value(config))\n}\n","import Recognizer from './Recognizer'\nimport { calculateAllKinematics, sign, subV } from '../utils/math'\nimport { Vector2, PartialGestureState, DistanceAngleKey, GestureState } from '../types'\n\n/**\n * @private\n * Abstract class for distance/angle-based gesture recongizers\n */\nexport default abstract class DistanceAngleRecognizer<T extends DistanceAngleKey> extends Recognizer<T> {\n  protected getInternalMovement(values: [number, number?], state: GestureState<T>): Vector2 {\n    const prev_a = state.values[1]\n    // not be defined if ctrl+wheel is used for zoom only\n    let [d, a = prev_a] = values\n\n    let delta_a = a - prev_a\n    let next_turns = state.turns\n    if (Math.abs(delta_a) > 270) next_turns += sign(delta_a)\n    return subV([d, a - 360 * next_turns], state.initial)\n  }\n\n  getKinematics(values: Vector2, event: UIEvent): PartialGestureState<T> {\n    const state = this.getMovement(values)\n    const turns = (values[1] - state.movement![1] - this.state.initial[1]) / 360\n    const dt = event.timeStamp - this.state.timeStamp!\n    const kinematics = calculateAllKinematics(state.movement!, state.delta!, dt)\n    return { turns, ...state, ...kinematics }\n  }\n\n  protected mapStateValues(state: GestureState<T>): Omit<PartialGestureState<T>, 'event'> {\n    return { da: state.values, vdva: state.velocities } as Omit<PartialGestureState<T>, 'event'>\n  }\n}\n\n/**\n * @param dangle is a small change of variable on \"lifting\" of the circle.\n * It's expected to be small and cannot be greater than 270 or under -270\n */\nexport function fixContinuity(dangle: number) {\n  dangle -= Math.round(dangle / 360) * 360\n  if (dangle > 270) return dangle - 360\n  if (dangle < -270) return dangle + 360\n  return dangle\n}\n","import DistanceAngleRecognizer from './DistanceAngleRecognizer'\nimport { Vector2, WebKitGestureEvent } from '../types'\nimport {\n  getGenericEventData,\n  getTwoTouchesEventData,\n  getWheelEventValues,\n  supportsGestureEvents,\n  getWebkitGestureEventValues,\n  supportsTouchEvents,\n} from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class PinchRecognizer extends DistanceAngleRecognizer<'pinch'> {\n  readonly ingKey = 'pinching'\n  readonly stateKey = 'pinch'\n\n  private pinchShouldStart = (event: TouchEvent) => {\n    const { touches } = getGenericEventData(event)\n    return this.enabled && touches === 2\n  }\n\n  onPinchStart = (event: TouchEvent) => {\n    if (!this.pinchShouldStart(event)) return\n\n    const { values, origin } = getTwoTouchesEventData(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      // TODO remove after type update\n      // @ts-ignore\n      ...getStartGestureState(this, values, event),\n      // @ts-ignore\n      ...getGenericPayload(this, event, true),\n      cancel: this.onCancel,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onPinchChange = (event: TouchEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const { values, origin } = getTwoTouchesEventData(event)\n    // @ts-ignore\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      // @ts-ignore\n      ...getGenericPayload(this, event),\n      ...kinematics,\n      origin,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onPinchEnd = (event: TouchEvent): void => {\n    if (!this.state.active) return\n    this.state._active = false\n    this.updateSharedState({ down: false, touches: 0 })\n\n    this.updateGestureState({\n      // @ts-ignore\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    })\n    this.fireGestureHandler()\n  }\n\n  onCancel = (): void => {\n    if (this.state.canceled) return\n    this.state._active = false\n    this.updateGestureState({ canceled: true })\n    this.updateSharedState({ down: false, touches: 0 })\n\n    requestAnimationFrame(() => this.fireGestureHandler())\n  }\n  /**\n   * PINCH WITH WEBKIT GESTURES\n   */\n\n  onGestureStart = (event: WebKitGestureEvent): void => {\n    if (!this.enabled) return\n    event.preventDefault() // useless\n\n    const values = getWebkitGestureEventValues(event)\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      cancel: this.onCancel,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onGestureChange = (event: WebKitGestureEvent): void => {\n    const { canceled, _active } = this.state\n    if (canceled || !_active) return\n\n    event.preventDefault()\n\n    const genericEventData = getGenericEventData(event)\n\n    this.updateSharedState(genericEventData)\n\n    const values = getWebkitGestureEventValues(event)\n    const kinematics = this.getKinematics(values, event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...kinematics,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onGestureEnd = (event: WebKitGestureEvent): void => {\n    event.preventDefault()\n    if (!this.state.active) return\n    this.state._active = false\n    this.updateSharedState({ down: false, touches: 0 })\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getMovement(this.state.values),\n    })\n    this.fireGestureHandler()\n  }\n\n  /**\n   * PINCH WITH WHEEL\n   */\n  private wheelShouldRun = (event: WheelEvent) => {\n    return this.enabled && event.ctrlKey\n  }\n\n  private getWheelValuesFromEvent = (event: WheelEvent) => {\n    const [, delta_d] = getWheelEventValues(event)\n    const {\n      values: [prev_d, prev_a],\n    } = this.state\n    const d = prev_d - delta_d\n    const a = prev_a !== void 0 ? prev_a : 0\n\n    return {\n      values: [d, a] as Vector2,\n      origin: [event.clientX, event.clientY] as Vector2,\n      delta: [0, delta_d] as Vector2,\n    }\n  }\n\n  onWheel = (event: WheelEvent): void => {\n    if (!this.wheelShouldRun(event)) return\n    this.setTimeout(this.onWheelEnd)\n\n    if (!this.state._active) this.onWheelStart(event)\n    else this.onWheelChange(event)\n  }\n\n  onWheelStart = (event: WheelEvent): void => {\n    const { values, delta, origin } = this.getWheelValuesFromEvent(event)\n\n    if (event.cancelable) event.preventDefault()\n    else if (process.env.NODE_ENV === 'development') {\n      console.warn(\n        'To properly support zoom on trackpads, try using the `domTarget` option and `config.eventOptions.passive` set to `false`. This message will only appear in development mode.'\n      )\n    }\n\n    this.updateSharedState(getGenericEventData(event))\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n      initial: this.state.values,\n      offset: values,\n      delta,\n      origin,\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onWheelChange = (event: WheelEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n\n    const { values, origin, delta } = this.getWheelValuesFromEvent(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n      origin,\n      delta,\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onWheelEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState(this.getMovement(this.state.values))\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    // Only try to use gesture events when they are supported and domTarget is set\n    // as React doesn't support gesture handlers.\n    if (this.controller.config.domTarget && !supportsTouchEvents() && supportsGestureEvents()) {\n      addBindings(bindings, 'gestureStart', this.onGestureStart)\n      addBindings(bindings, 'gestureChange', this.onGestureChange)\n      addBindings(bindings, 'gestureEnd', this.onGestureEnd)\n    } else {\n      addBindings(bindings, 'touchstart', this.onPinchStart)\n      addBindings(bindings, 'touchmove', this.onPinchChange)\n      addBindings(bindings, 'touchend', this.onPinchEnd)\n      addBindings(bindings, 'touchcancel', this.onPinchEnd)\n      addBindings(bindings, 'wheel', this.onWheel)\n    }\n  }\n}\n","import { UsePinchConfig, Handler, EventTypes } from '../types'\nimport { _buildPinchConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { ref } from 'vue-demi'\n\n/**\n * Pinch hook.\n *\n * @param handler - the function fired every time the pinch gesture updates\n * @param [config={}] - the config object including generic options and pinch options\n */\nexport function usePinch<K = EventTypes['pinch']>(handler: Handler<'pinch', K>, config: UsePinchConfig | {} = {}) {\n  RecognizersMap.set('pinch', PinchRecognizer)\n  const buildPinchConfig = ref<any>()\n  if (!buildPinchConfig.value) {\n    buildPinchConfig.value = memoize(_buildPinchConfig, isEqual)\n  }\n  return useRecognizers<UsePinchConfig>({ pinch: handler }, buildPinchConfig.value(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getWheelEventValues, getGenericEventData } from '../utils/event'\nimport { addV, calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class WheelRecognizer extends CoordinatesRecognizer<'wheel'> {\n  readonly ingKey = 'wheeling'\n  readonly stateKey = 'wheel'\n  debounced = true\n\n  handleEvent = (event: WheelEvent): void => {\n    if (event.ctrlKey && 'pinch' in this.controller.handlers) return\n    if (!this.enabled) return\n\n    this.setTimeout(this.onEnd)\n    this.updateSharedState(getGenericEventData(event))\n\n    const values = addV(getWheelEventValues(event), this.state.values)\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n      })\n\n      const movement = this.getMovement(values)\n      const geometry = calculateAllGeometry(movement.delta!)\n\n      this.updateGestureState(movement)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    const movement = this.getMovement(this.state.values)\n    this.updateGestureState(movement)\n    this.updateGestureState({ _active: false, velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onWheel', this.handleEvent)\n  }\n}\n","import { UseWheelConfig, Handler, EventTypes } from '../types'\nimport { _buildWheelConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { ref } from 'vue-demi'\n\n/**\n * Wheel hook.\n *\n * @param handler - the function fired every time the wheel gesture updates\n * @param the config object including generic options and wheel options\n */\nexport function useWheel<K = EventTypes['wheel']>(handler: Handler<'wheel', K>, config: UseWheelConfig | {} = {}) {\n  RecognizersMap.set('wheel', WheelRecognizer)\n  const buildWheelConfig = ref<any>()\n  if (!buildWheelConfig.value) {\n    buildWheelConfig.value = memoize(_buildWheelConfig, isEqual)\n  }\n  return useRecognizers<UseWheelConfig>({ wheel: handler }, buildWheelConfig.value(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getPointerEventValues } from '../utils/event'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class MoveRecognizer extends CoordinatesRecognizer<'move'> {\n  readonly ingKey = 'moving'\n  readonly stateKey = 'move'\n\n  debounced = true\n\n  onMove = (event: PointerEvent): void => {\n    if (!this.enabled) return\n    this.setTimeout(this.onMoveEnd)\n\n    if (!this.state._active) this.onMoveStart(event)\n    else this.onMoveChange(event)\n  }\n\n  onMoveStart = (event: PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event)\n\n    this.updateGestureState({\n      ...getStartGestureState(this, values, event),\n      ...getGenericPayload(this, event, true),\n    })\n\n    this.updateGestureState(this.getMovement(values))\n    this.fireGestureHandler()\n  }\n\n  onMoveChange = (event: PointerEvent): void => {\n    this.updateSharedState(getGenericEventData(event))\n    const values = getPointerEventValues(event)\n\n    this.updateGestureState({\n      ...getGenericPayload(this, event),\n      ...this.getKinematics(values, event),\n    })\n\n    this.fireGestureHandler()\n  }\n\n  onMoveEnd = (): void => {\n    const values = this.state.values\n    this.updateGestureState(this.getMovement(values))\n    this.updateGestureState({ velocities: [0, 0], velocity: 0, _active: false })\n    this.fireGestureHandler()\n  }\n\n  onPointerEnter = (event: PointerEvent): void => {\n    this.controller.state.shared.hovering = true\n    if (!this.controller.config.enabled) return\n\n    if (this.controller.config.hover!.enabled) {\n      const values = getPointerEventValues(event)\n\n      const state = {\n        ...this.controller.state.shared,\n        ...this.state,\n        ...getGenericPayload(this, event, true),\n        values,\n        active: true,\n        hovering: true,\n      }\n\n      this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n    }\n\n    if ('move' in this.controller.handlers) this.onMoveStart(event)\n  }\n\n  onPointerLeave = (event: PointerEvent): void => {\n    this.controller.state.shared.hovering = false\n    if ('move' in this.controller.handlers) this.onMoveEnd()\n    if (!this.controller.config.hover!.enabled) return\n\n    const values = getPointerEventValues(event)\n\n    const state = {\n      ...this.controller.state.shared,\n      ...this.state,\n      ...getGenericPayload(this, event),\n      values,\n      active: false,\n    }\n\n    this.controller.handlers.hover!({ ...state, ...this.mapStateValues(state) })\n  }\n\n  addBindings(bindings: any): void {\n    if ('move' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerMove', this.onMove)\n    }\n    if ('hover' in this.controller.handlers) {\n      addBindings(bindings, 'onPointerEnter', this.onPointerEnter)\n      addBindings(bindings, 'onPointerLeave', this.onPointerLeave)\n    }\n  }\n}\n","import { UseMoveConfig, Handler, EventTypes } from '../types'\nimport { _buildMoveConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { ref } from 'vue-demi'\n\n/**\n * Move hook.\n *\n * @param handler - the function fired every time the move gesture updates\n * @param [config={}] - the config object including generic options and move options\n */\nexport function useMove<K = EventTypes['move']>(handler: Handler<'move', K>, config: UseMoveConfig | {} = {}) {\n  RecognizersMap.set('move', MoveRecognizer)\n  const buildMoveConfig = ref<any>()\n  if (!buildMoveConfig.value) {\n    buildMoveConfig.value = memoize(_buildMoveConfig, isEqual)\n  }\n  return useRecognizers<UseMoveConfig>({ move: handler }, buildMoveConfig.value(config))\n}\n","import { Handler, UseHoverConfig, EventTypes } from '../types'\nimport { _buildHoverConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\nimport { ref } from 'vue-demi'\n\n/**\n * Hover hook.\n *\n * @param handler - the function fired every time the hover gesture updates\n * @param [config={}] - the config object including generic options and hover options\n */\nexport function useHover<K = EventTypes['hover']>(handler: Handler<'hover', K>, config: UseHoverConfig | {} = {}) {\n  RecognizersMap.set('hover', MoveRecognizer)\n  const buildHoverConfig = ref<any>()\n  if (!buildHoverConfig.value) {\n    buildHoverConfig.value = memoize(_buildHoverConfig, isEqual)\n  }\n  return useRecognizers<UseHoverConfig>({ hover: handler }, buildHoverConfig.value(config))\n}\n","import CoordinatesRecognizer from './CoordinatesRecognizer'\nimport { getGenericEventData, getScrollEventValues } from '../utils/event'\nimport { calculateAllGeometry } from '../utils/math'\nimport { getStartGestureState, getGenericPayload } from './Recognizer'\nimport { addBindings } from '../Controller'\n\nexport class ScrollRecognizer extends CoordinatesRecognizer<'scroll'> {\n  readonly ingKey = 'scrolling'\n  readonly stateKey = 'scroll'\n  debounced = true\n\n  handleEvent = (event: UIEvent): void => {\n    if (!this.enabled) return\n\n    this.clearTimeout()\n    this.setTimeout(this.onEnd)\n\n    const values = getScrollEventValues(event)\n    this.updateSharedState(getGenericEventData(event))\n\n    if (!this.state._active) {\n      this.updateGestureState({\n        ...getStartGestureState(this, values, event),\n        ...getGenericPayload(this, event, true),\n        initial: this.state.values,\n      })\n\n      const movementDetection = this.getMovement(values)\n      const geometry = calculateAllGeometry(movementDetection.delta!)\n\n      this.updateGestureState(movementDetection)\n      this.updateGestureState(geometry)\n    } else {\n      this.updateGestureState({\n        ...getGenericPayload(this, event),\n        ...this.getKinematics(values, event),\n      })\n    }\n\n    this.fireGestureHandler()\n  }\n\n  onEnd = (): void => {\n    this.state._active = false\n    this.updateGestureState({ ...this.getMovement(this.state.values), velocities: [0, 0], velocity: 0 })\n    this.fireGestureHandler()\n  }\n\n  addBindings(bindings: any): void {\n    addBindings(bindings, 'onScroll', this.handleEvent)\n  }\n}\n","import { UseScrollConfig, Handler, EventTypes } from '../types'\nimport { _buildScrollConfig } from './buildConfig'\nimport useRecognizers from './useRecognizers'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport memoize from '../utils/memoize-one'\nimport isEqual from '../utils/react-fast-compare'\n// import { useRef } from 'react';\nimport { ref } from 'vue-demi'\n\n/**\n * Scroll hook.\n *\n * @param handler - the function fired every time the scroll gesture updates\n * @param [config={}] - the config object including generic options and scroll options\n */\nexport function useScroll<K = EventTypes['scroll']>(handler: Handler<'scroll', K>, config: UseScrollConfig | {} = {}) {\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  const buildScrollConfig = ref<any>()\n  if (!buildScrollConfig.value) {\n    buildScrollConfig.value = memoize(_buildScrollConfig, isEqual)\n  }\n  return useRecognizers<UseScrollConfig>({ scroll: handler }, buildScrollConfig.value(config))\n}\n","import useRecognizers from './useRecognizers'\nimport { buildComplexConfig } from './buildConfig'\nimport {\n  InternalConfig,\n  InternalHandlers,\n  UserHandlers,\n  UseGestureConfig,\n  Handlers,\n  EventTypes,\n  AnyGestureEventTypes,\n} from '../types'\nimport { RecognizersMap } from '../recognizers/Recognizer'\nimport { DragRecognizer } from '../recognizers/DragRecognizer'\nimport { MoveRecognizer } from '../recognizers/MoveRecognizer'\nimport { PinchRecognizer } from '../recognizers/PinchRecognizer'\nimport { ScrollRecognizer } from '../recognizers/ScrollRecognizer'\nimport { WheelRecognizer } from '../recognizers/WheelRecognizer'\n\nexport function wrapStart(fn: Function) {\n  return function (this: any, { first }: any) {\n    if (first) fn.apply(this, arguments)\n  }\n}\n\nexport function wrapEnd(fn: Function) {\n  return function (this: any, { last }: any) {\n    if (last) fn.apply(this, arguments)\n  }\n}\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/\n\nfunction sortHandlers(handlers: object) {\n  const native: any = {}\n  const handle: any = {}\n  const actions = new Set()\n\n  for (let key in handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch)\n      handle[key] = (handlers as any)[key]\n    } else {\n      native[key] = (handlers as any)[key]\n    }\n  }\n\n  return [handle, native, actions]\n}\n\n/**\n * @public\n *\n * The most complete gesture hook, allowing support for multiple gestures.\n *\n * @param {Handlers} handlers - an object with on[Gesture] keys containg gesture handlers\n * @param {UseGestureConfig} [config={}] - the full config object\n * @returns {(...args: any[]) => HookReturnType<Config>}\n */\nexport function useGesture<T extends AnyGestureEventTypes = EventTypes>(\n  _handlers: Handlers<T>,\n  config: UseGestureConfig = {}\n) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(_handlers)\n\n  RecognizersMap.set('drag', DragRecognizer)\n  RecognizersMap.set('hover', MoveRecognizer)\n  RecognizersMap.set('move', MoveRecognizer)\n  RecognizersMap.set('pinch', PinchRecognizer)\n  RecognizersMap.set('scroll', ScrollRecognizer)\n  RecognizersMap.set('wheel', WheelRecognizer)\n\n  const mergedConfig: InternalConfig = buildComplexConfig(config, actions)\n  const internalHandlers: Partial<InternalHandlers> = {}\n\n  if (actions.has('onDrag')) internalHandlers.drag = includeStartEndHandlers(handlers, 'onDrag')\n  if (actions.has('onWheel')) internalHandlers.wheel = includeStartEndHandlers(handlers, 'onWheel')\n  if (actions.has('onScroll')) internalHandlers.scroll = includeStartEndHandlers(handlers, 'onScroll')\n  if (actions.has('onMove')) internalHandlers.move = includeStartEndHandlers(handlers, 'onMove')\n  if (actions.has('onPinch')) internalHandlers.pinch = includeStartEndHandlers(handlers, 'onPinch')\n  if (actions.has('onHover')) internalHandlers.hover = handlers.onHover\n\n  return useRecognizers<UseGestureConfig>(internalHandlers, mergedConfig, nativeHandlers)\n}\n\n/**\n * @private\n *\n * This utility function will integrate start and end handlers into the regular\n * handler function by using first and last conditions.\n *\n * @param {UserHandlersPartial} handlers - the handlers function object\n * @param {HandlerKey} handlerKey - the key for which to integrate start and end handlers\n * @returns\n */\ntype HandlerKey = 'onDrag' | 'onPinch' | 'onWheel' | 'onMove' | 'onScroll' | 'onHover'\nfunction includeStartEndHandlers(handlers: Partial<UserHandlers>, handlerKey: HandlerKey) {\n  const startKey = (handlerKey + 'Start') as keyof UserHandlers\n  const endKey = (handlerKey + 'End') as keyof UserHandlers\n\n  const fn = (state: any) => {\n    let memo: any = undefined\n    if (state.first && startKey in handlers) handlers[startKey]!(state)\n    if (handlerKey in handlers) memo = handlers[handlerKey]!(state)\n    if (state.last && endKey in handlers) handlers[endKey]!(state)\n    return memo\n  }\n  return fn\n}\n","export interface SpringConfig {\n  /**\n   * Mass of the spring\n   */\n  mass?: number\n  /**\n   * Spring energetic load. Also called stiffness\n   */\n  tension: number\n  /**\n   * Spring resistance.\n   */\n  friction: number\n  /**\n   * The higher the precision, the more smooth and slow to compute the animation\n   * will be. By default 0.01 is a good value, but can be decreased to 0.1 in\n   * some scenarios for performance.\n   */\n  precision?: number\n}\n\nexport const noWobble: SpringConfig = {\n  mass: 1,\n  tension: 170,\n  friction: 26,\n  precision: 0.01,\n} // the default, if nothing provided\nexport const gentle: SpringConfig = {\n  mass: 1,\n  tension: 120,\n  friction: 14,\n  precision: 0.01,\n}\nexport const wobbly: SpringConfig = {\n  mass: 1,\n  tension: 180,\n  friction: 12,\n  precision: 0.01,\n}\nexport const stiff: SpringConfig = {\n  mass: 1,\n  tension: 210,\n  friction: 20,\n  precision: 0.01,\n}\n\nexport const presets = { noWobble, gentle, wobbly, stiff }\n","import { SpringConfig } from './presets'\n\nexport const isClient = typeof window !== 'undefined'\n\nexport const raf = isClient ? window.requestAnimationFrame.bind(window) : () => {}\nexport const cancelRaf = isClient ? window.cancelAnimationFrame.bind(window) : () => {}\n\nexport const now = typeof performance !== 'undefined' ? performance.now.bind(performance) : Date.now.bind(Date)\n\nexport const isArray = Array.isArray.bind(Array)\n\nexport const isObject = (value: any): value is object => value != null && typeof value === 'object'\nexport const isFunction = (value: unknown): value is Function => typeof value === 'function'\n\n// stepper is used a lot. Saves allocation to return the same array wrapper.\n// This is fine and danger-free against mutations because the callsite\n// immediately destructures it and gets the numbers inside without passing the\n// array reference around.\nconst reusedTuple: [number, number] = [0, 0]\nexport function stepper(\n  secondPerFrame: number,\n  x: number,\n  v: number,\n  destX: number,\n  spring: SpringConfig\n): [number, number] {\n  // Spring stiffness, in kg / s^2\n\n  // for animations, destX is really spring length (spring at rest). initial\n  // position is considered as the stretched/compressed position of a spring\n  const Fspring = -spring.tension * (x - destX)\n  // Damping, in kg / s\n  const Fdamper = -spring.friction * v\n\n  const a = (Fspring + Fdamper) / (spring.mass || 1)\n\n  const newV = v + a * secondPerFrame\n  const newX = x + newV * secondPerFrame\n\n  const precision = spring.precision || 0.01\n\n  if (Math.abs(newV) < precision && Math.abs(newX - destX) < precision) {\n    reusedTuple[0] = destX\n    reusedTuple[1] = 0\n    return reusedTuple\n  }\n\n  reusedTuple[0] = newX\n  reusedTuple[1] = newV\n\n  return reusedTuple\n}\n","import { computed, onMounted, onUnmounted, reactive, Ref, ref, watch, toRefs } from 'vue-demi'\nimport { SpringConfig, noWobble } from './presets'\nimport { raf, cancelRaf, now, isArray, stepper, isFunction } from './utils'\n\nconst msPerFrame = 1000 / 60\n\ntype NumericalValues = Record<string, number> | number[]\nexport type SpringValue = NumericalValues\n\nfunction defineInitialValues<T extends NumericalValues>(values: T, velocities: T | null): [T, T] {\n  const newValues = (isArray(values) ? [] : {}) as T\n  const newVelocities = (isArray(values) ? [] : {}) as T\n\n  for (const key in values) {\n    newValues[key] = values[key]\n    // @ts-ignore\n    newVelocities[key] = velocities ? velocities[key] : 0\n  }\n\n  return [newValues, newVelocities]\n}\n\nexport interface SpringObject<T extends SpringValue> {\n  values: T\n}\n\nconst noop = () => {}\n\nexport function useSpring<T extends SpringValue>(\n  initialValue: T | Ref<T>,\n  // TODO: could change\n  springConfiguration?: SpringConfig,\n  options: {\n    onRest?: () => any\n  } = {}\n): T {\n  const spring = springConfiguration || noWobble\n\n  const onRest = options.onRest || noop\n\n  // hold a ref to real values so we can change them\n  // @ts-ignore\n  const realValues = isFunction(initialValue) ? ref(initialValue()) : ref(initialValue)\n\n  let wasAnimating = false\n  let prevTime = 0\n  let accumulatedTime = 0\n\n  watch(\n    realValues,\n    (_current, _old) => {\n      if (!wasAnimating) {\n        prevTime = now()\n        accumulatedTime = 0\n        animate()\n      }\n    },\n    { deep: true }\n  )\n\n  const current = defineInitialValues(realValues.value, null)\n\n  const currentValues = ref(current[0])\n  const currentVelocities = ref(current[1])\n\n  // only done to correctly infer types, they're overridden in mounted\n  let idealValues = current[0]\n  let idealVelocities = current[1]\n\n  onMounted(() => {\n    prevTime = now()\n    accumulatedTime = 0\n\n    const ideal = defineInitialValues(currentValues.value, currentVelocities.value)\n\n    idealValues = ideal[0]\n    idealVelocities = ideal[1]\n\n    animate()\n  })\n\n  let animationId: number | void | undefined | null\n  // TODO: also cancel when a new value comes\n  onUnmounted(() => {\n    if (animationId) {\n      cancelRaf(animationId)\n    }\n  })\n\n  function animate() {\n    animationId = raf(() => {\n      if (shouldStopAnimation(currentValues.value, realValues.value, currentVelocities.value)) {\n        // TODO: emit\n        if (wasAnimating) onRest()\n\n        // reset everything for next animation\n        animationId = null\n        wasAnimating = false\n        return\n      }\n\n      // TODO: emit\n      // if (!wasAnimating) this.$emit('motion-start')\n      wasAnimating = true\n\n      // get time from last frame\n      const currentTime = now()\n      const timeDelta = currentTime - prevTime\n      prevTime = currentTime\n      accumulatedTime += timeDelta\n\n      // more than 10 frames? probably switched browser tab. Restart\n      if (accumulatedTime > msPerFrame * 10) {\n        accumulatedTime = 0\n      }\n\n      if (accumulatedTime === 0) {\n        // no need to cancel animationID here; shouldn't have any in flight\n        animationId = null\n        // TODO: emit\n        // this.$emit('motion-restart')\n        return animate()\n      }\n\n      const currentFrameCompletion =\n        (accumulatedTime - Math.floor(accumulatedTime / msPerFrame) * msPerFrame) / msPerFrame\n      const framesToCatchUp = Math.floor(accumulatedTime / msPerFrame)\n\n      animateValues(\n        framesToCatchUp,\n        currentFrameCompletion,\n        spring,\n        realValues.value,\n        currentValues.value,\n        currentVelocities.value,\n        idealValues,\n        idealVelocities\n      )\n\n      // out of the update loop\n      animationId = null\n      // the amount we're looped over above\n      accumulatedTime -= framesToCatchUp * msPerFrame\n\n      // keep going!\n      animate()\n    })\n  }\n\n  const modifiableValues = (isArray(realValues.value) ? [] : {}) as T\n  for (const key in realValues.value) {\n    // @ts-ignore\n    modifiableValues[key] = computed({\n      // @ts-ignore\n      get: () => currentValues.value[key],\n      // @ts-ignore\n      set: (v) => (realValues.value[key] = v),\n    })\n  }\n\n  if (isFunction(initialValue)) {\n    // @ts-ignore\n    const values = toRefs(reactive(modifiableValues)) as any\n\n    const update = (rawValuesObject: any) => {\n      const keys = Object.keys(rawValuesObject)\n      keys.forEach((key) => {\n        if (!(key in values)) return\n        values[key].value = rawValuesObject[key]\n        if ('config' in rawValuesObject) Object.assign(spring, { config: rawValuesObject.config })\n        if ('immediate' in rawValuesObject) Object.assign(spring, { immediate: rawValuesObject.immediate })\n      })\n    }\n\n    // @ts-ignore\n    return [values as T, update as any]\n  }\n\n  return reactive(modifiableValues) as T\n}\n\nfunction shouldStopAnimation(currentValues: SpringValue, values: SpringValue, currentVelocities: NumericalValues) {\n  for (const key in values) {\n    // istanbul ignore if\n    // if (!Object.prototype.hasOwnProperty.call(values, key)) continue\n\n    // Something is still moving\n    if (currentVelocities[key as keyof NumericalValues] !== 0) return false\n\n    // Something hasn't reached its destination\n    // stepper will have already taken care of rounding precision errors, so\n    // won't have such thing as 0.9999 != 1\n    if (currentValues[key as keyof SpringValue] !== values[key as keyof SpringValue]) return false\n  }\n\n  return true\n}\n\nfunction animateValues(\n  framesToCatchUp: number,\n  currentFrameCompletion: number,\n  spring: SpringConfig,\n  realValues: SpringValue,\n  currentValues: SpringValue,\n  currentVelocities: SpringValue,\n  idealValues: SpringValue,\n  idealVelocities: SpringValue\n) {\n  for (const key in realValues) {\n    // istanbul ignore if\n    // if (!Object.prototype.hasOwnProperty.call(realValues, key)) continue\n\n    let newIdealValue = idealValues[key as keyof NumericalValues] as number\n    let newIdealVelocity = idealVelocities[key as keyof NumericalValues] as number\n    const value = realValues[key as keyof NumericalValues] as number\n\n    // iterate as if the animation took place\n    for (let i = 0; i < framesToCatchUp; i++) {\n      ;[newIdealValue, newIdealVelocity] = stepper(msPerFrame / 1000, newIdealValue, newIdealVelocity, value, spring)\n    }\n\n    const [nextIdealValue, nextIdealVelocity] = stepper(\n      msPerFrame / 1000,\n      newIdealValue,\n      newIdealVelocity,\n      value,\n      spring\n    )\n\n    // @ts-ignore\n    currentValues[key] = newIdealValue + (nextIdealValue - newIdealValue) * currentFrameCompletion\n    // @ts-ignore\n    currentVelocities[key] = newIdealVelocity + (nextIdealVelocity - newIdealVelocity) * currentFrameCompletion\n    // @ts-ignore\n    idealValues[key] = newIdealValue\n    // @ts-ignore\n    idealVelocities[key] = newIdealVelocity\n  }\n}\n"],"names":["addV","v1","v2","map","v","i","subV","calculateDistance","movement","Math","hypot","calculateAllGeometry","delta","dl","alpha","direction","distance","calculateAllKinematics","dt","beta","velocity","velocities","sign","x","Number","minMax","value","min","max","rubberband2","constant","pow","rubberband","dimension","abs","Infinity","rubberbandIfOutOfBounds","position","noop","chainFns","fns","length","result","fn","apply","arguments","ensureVector","fallback","undefined","Error","Array","isArray","assignDefault","Object","assign","valueFn","args","resolveWith","config","resolvers","entries","key","resolver","call","DEFAULT_DRAG_DELAY","DEFAULT_RUBBERBAND","DEFAULT_SWIPE_VELOCITY","DEFAULT_SWIPE_DISTANCE","InternalGestureOptionsNormalizers","threshold","enabled","triggerAllEvents","initial","InternalCoordinatesOptionsNormalizers","axis","lockDirection","bounds","state","left","right","top","bottom","isBrowser","window","document","createElement","InternalGenericOptionsNormalizers","domTarget","eventOptions","passive","capture","InternalDistanceAngleOptionsNormalizers","_value","_key","distanceBounds","angleBounds","_distanceBounds","D","_angleBounds","A","InternalDragOptionsNormalizers","_k","filterTaps","swipeVelocity","swipeDistance","delay","getInternalGenericOptions","getInternalCoordinatesOptions","getInternalDistanceAngleOptions","getInternalDragOptions","_buildMoveConfig","rest","opts","move","_buildHoverConfig","hover","_buildDragConfig","drag","_buildPinchConfig","pinch","_buildScrollConfig","scroll","_buildWheelConfig","wheel","buildComplexConfig","actions","Set","mergedConfig","has","getInitial","mixed","_active","_blocked","_intentional","_movement","_initial","_bounds","_lastEventType","event","intentional","values","offset","lastOffset","previous","first","last","active","timeStamp","startTime","elapsedTime","cancel","canceled","memo","getInitialState","shared","hovering","scrolling","wheeling","dragging","moving","pinching","touches","buttons","down","shiftKey","altKey","metaKey","ctrlKey","xy","vxvy","_isTap","_delayedEvent","_pointerId","tap","swipe","da","vdva","origin","turns","RecognizersMap","Map","Recognizer","controller","callback","ms","clearTimeout","timeouts","stateKey","setTimeout","forceFlag","debounced","clean","prev_active","next_active","ingKey","mapStateValues","newMemo","handler","updateSharedState","sharedState","updateGestureState","gestureState","checkIntentionality","getMovement","T","wasIntentional","prevMovement","M","getInternalMovement","i0","getIntentionalDisplacement","i1","intentionalityCheck","__cachedBounds","__cachedInitial","_rubberband","computeRubberband","handlers","Vx","Vy","Rx","Ry","X1","X2","Y1","Y2","getGenericPayload","isStartEvent","type","getStartGestureState","recognizer","partial","func","Controller","classes","bindings","RecognizerClass","addBindings","nativeRefs","updateDomListeners","getPropsListener","bind","getDomTargetFromConfig","removeListeners","takeAll","domListeners","forEach","clearAllWindowListeners","windowListeners","el","clearWindowListeners","updateWindowListeners","listeners","addListeners","name","slice","toLowerCase","push","props","captureString","fnsArray","array","splice","options","eventName","eventHandler","addEventListener","removeEventListener","useRecognizers","nativeHandlers","resolveClasses","onMounted","effect","deprecationNoticeForDomTarget","console","warn","internalHandlers","add","get","CoordinatesRecognizer","absX","absY","getKinematics","WEBKIT_DISTANCE_SCALE_FACTOR","supportsGestureEvents","GestureEvent","e","supportsTouchEvents","ontouchstart","getTouchEvents","targetTouches","changedTouches","getGenericEventData","touchEvents","getPointerEventValues","clientX","clientY","getScrollEventValues","currentTarget","scrollX","scrollY","scrollLeft","scrollTop","getWheelEventValues","deltaX","deltaY","getWebkitGestureEventValues","scale","rotation","getTwoTouchesEventData","B","dx","dy","cx","cy","angle","atan2","PI","TAP_DISTANCE_THRESHOLD","SWIPE_MAX_ELAPSED_TIME","DragRecognizer","onDragChange","onDragEnd","pointerId","startDrag","genericEventData","kinematics","genericPayload","realDistance","fireGestureHandler","vx","vy","mx","my","ix","iy","svx","svy","sx","sy","endState","requestAnimationFrame","stopPropagation","onCancel","onDragStart","onClick","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","equal","a","b","constructor","keys","it","size","next","done","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","Element","$$typeof","error","message","match","useDrag","set","buildDragConfig","ref","memoize","DistanceAngleRecognizer","prev_a","d","delta_a","next_turns","PinchRecognizer","pinchShouldStart","preventDefault","delta_d","prev_d","wheelShouldRun","onWheelEnd","onWheelStart","onWheelChange","getWheelValuesFromEvent","cancelable","onGestureStart","onGestureChange","onGestureEnd","onPinchStart","onPinchChange","onPinchEnd","onWheel","usePinch","buildPinchConfig","WheelRecognizer","onEnd","geometry","handleEvent","useWheel","buildWheelConfig","MoveRecognizer","onMoveEnd","onMoveStart","onMoveChange","onMove","onPointerEnter","onPointerLeave","useMove","buildMoveConfig","useHover","buildHoverConfig","ScrollRecognizer","movementDetection","useScroll","buildScrollConfig","RE_NOT_NATIVE","sortHandlers","native","handle","test","lastMatch","useGesture","_handlers","includeStartEndHandlers","onHover","handlerKey","startKey","endKey","noWobble","mass","tension","friction","precision","gentle","wobbly","stiff","presets","isClient","raf","cancelRaf","cancelAnimationFrame","now","performance","Date","isFunction","reusedTuple","stepper","secondPerFrame","destX","spring","Fspring","Fdamper","newV","newX","msPerFrame","defineInitialValues","newValues","newVelocities","useSpring","initialValue","springConfiguration","onRest","realValues","wasAnimating","prevTime","accumulatedTime","watch","_current","_old","animate","deep","current","currentValues","currentVelocities","idealValues","idealVelocities","ideal","animationId","onUnmounted","shouldStopAnimation","currentTime","timeDelta","currentFrameCompletion","floor","framesToCatchUp","animateValues","modifiableValues","computed","toRefs","reactive","update","rawValuesObject","immediate","newIdealValue","newIdealVelocity","nextIdealValue","nextIdealVelocity"],"mappings":"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"}